<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true">
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>

  <targets>
    <!-- File Target for all log messages with basic details -->
    <target xsi:type="File" name="allFile" 
         fileName="${basedir}/logs/all.log"
         archiveFileName="${basedir}/logs/archives/all-${shortdate}-{#}.log"
         archiveAboveSize="5242880"
         archiveEvery="Day"
         archiveNumbering = "Rolling"
         maxArchiveFiles="30"
         archiveOldFileOnStartup="true"
         layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

    <!-- File Target for client log messages with basic details -->
    <target xsi:type="File" name="clientFile"
         fileName="${basedir}/logs/client.log"
         archiveFileName="${basedir}/logs/archives/client-${shortdate}-{#}.log"
         archiveAboveSize="5242880"
         archiveEvery="Day"
         archiveNumbering = "Rolling"
         maxArchiveFiles="30"
         archiveOldFileOnStartup="true"
         layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

    <!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
    <target xsi:type="File" name="ownFile" 
         fileName="${basedir}/logs/own.log"
         archiveFileName="${basedir}/logs/archives/own-${shortdate}-{#}.log"
         archiveAboveSize="5242880"
         archiveEvery="Day"
         archiveNumbering = "Rolling"
         maxArchiveFiles="30"
         archiveOldFileOnStartup="true"
         layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|${callsite}| body: ${aspnet-request-posted-body}" />

    <!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
    <!--<target xsi:type="Console" name="console" layout="${level:truncate=4:lowercase=true}: ${logger}[0]${newline}      ${message}${exception:format=tostring}" />-->
    <target xsi:type="ColoredConsole" name="colorConsole"  layout="${level:truncate=4:lowercase=true}: ${logger}[0]${newline}      ${message}${exception:format=tostring}" /> />
  </targets>
  
  <rules>
    <logger name="Draw.Server.Hubs.ClientLogHub" minlevel="Debug" writeTo="clientFile" />
    
    <!--All logs, including from Microsoft-->
    <logger name="*" minlevel="Debug" writeTo="allFile" />

    <!--Output hosting lifetime messages to console target for faster startup detection -->
    <logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="console, colorConsole, ownFile" final="true" />

    <!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
    <logger name="Microsoft.*" maxlevel="Info" final="true" />
    <logger name="System.Net.Http.*" maxlevel="Info" final="true" />

    <logger name="*" minlevel="Debug" writeTo="ownFile" />
  </rules>
</nlog>